'use client';

import { useState, useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';

const funnyLoadingMessages = [
  "–ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—Ç–æ –∫–æ–º—É –¥–æ–ª–∂–µ–Ω...",
  "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–º—è—Ç—å –æ —Ç–æ–º, –∫—Ç–æ —á—Ç–æ –≥–æ–≤–æ—Ä–∏–ª...",
  "–ò—â–µ–º –æ—Ç–≥–æ–≤–æ—Ä–∫–∏ –ø–æ—á–µ–º—É –ø—Ä–æ–∏–≥—Ä–∞–ª...",
  "–ó–∞–≥—Ä—É–∂–∞–µ–º –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è...",
  "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤–µ—Ä—Å–∏–∏ –ø—Ä–∞–≤–¥—ã...",
  "–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Å—Ç–Ω–æ—Å—Ç—å –¥–∏–ª–µ—Ä–∞...",
  "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–∏—à–µ–∫...",
  "–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–ª–µ–∑—ã –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö...",
  "–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±—ã–ª –ª–∏ –∫—Ç–æ-—Ç–æ —Ñ–∏—à–∫–∏...",
  "–ò—â–µ–º –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã...",
  "–ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Ç-–æ–¥–¥—Å—ã...",
  "–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±–ª–µ—Ñ—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä...",
  "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –±–ª–µ—Ñ–∞...",
  "–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ '—ç—Ç–æ –¥–∏—Å–ø–µ—Ä—Å–∏—è'...",
  "–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±—ã–ª –ª–∏ –∫—Ç–æ-—Ç–æ –ø—Ä–æ –∫–æ–º–∏—Å—Å–∏—é...",
  "–ò—â–µ–º –æ–ø—Ä–∞–≤–¥–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π...",
  "–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–µ—Ä–µ–ø—É—Ç–∞–ª–∏ –ª–∏ —Ñ–∏—à–∫–∏...",
  "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–∏...",
  "–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏–ª—å—Ç–æ–≤...",
  "–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±—ã–ª –ª–∏ –∫—Ç–æ-—Ç–æ –ø—Ä–æ –∞—É—Ç—Å—ã..."
];

const loadingEmojis = ['üé∞', 'üÉè', 'üí∞', 'üé≤', 'üèÜ', 'üíé', 'üÉè', 'üéØ', 'üé™', 'üé≠'];

export function FunnyLoading() {
  const [message, setMessage] = useState<string>('');
  const [emoji, setEmoji] = useState<string>('');
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const randomMessage = funnyLoadingMessages[Math.floor(Math.random() * funnyLoadingMessages.length)];
    const randomEmoji = loadingEmojis[Math.floor(Math.random() * loadingEmojis.length)];
    
    setMessage(randomMessage);
    setEmoji(randomEmoji);
    setIsVisible(true);

    const timer = setTimeout(() => {
      setIsVisible(false);
    }, 3000);

    return () => clearTimeout(timer);
  }, []);

  if (!isVisible) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center">
      <Card className="max-w-md mx-4">
        <CardContent className="p-6 text-center">
          {/* –ê–Ω–∏–º–∞—Ü–∏—è –∫–∞—Ä—Ç —Å flip —ç—Ñ—Ñ–µ–∫—Ç–æ–º */}
          <div className="flex items-center justify-center gap-2 mb-6">
            <div className="text-2xl animate-card-flip" style={{ animationDelay: '0s' }}>üÉè</div>
            <div className="text-2xl animate-card-flip" style={{ animationDelay: '0.2s' }}>üí∞</div>
            <div className="text-2xl animate-card-flip" style={{ animationDelay: '0.4s' }}>üé≤</div>
            <div className="text-2xl animate-card-flip" style={{ animationDelay: '0.6s' }}>üèÜ</div>
            <div className="text-2xl animate-card-flip" style={{ animationDelay: '0.8s' }}>üíé</div>
          </div>
          
          <div className="space-y-4">
            <p className="text-lg font-medium">{message}</p>
          </div>
          
          <p className="text-xs text-muted-foreground mt-4">
            –ü–æ–∫–∞ —Å–µ—Ä–≤–µ—Ä –¥—É–º–∞–µ—Ç, –ø–æ–¥—É–º–∞–π –æ —Å–≤–æ–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
          </p>
        </CardContent>
      </Card>
    </div>
  );
} 